local player = game:GetService("Players").LocalPlayer
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 200, 0, 90)
frame.Position = UDim2.new(0.5, -100, 0, 10)
frame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
frame.Active = true
frame.Draggable = true

local corner = Instance.new("UICorner", frame)
corner.CornerRadius = UDim.new(0, 12)

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 30)
title.Position = UDim2.new(0, 0, 0, 8)
title.Text = "funny gui"
title.TextColor3 = Color3.new(1, 1, 1)
title.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
title.Font = Enum.Font.GothamBlack
title.TextSize = 20
title.TextStrokeTransparency = 0.5

local titleCorner = Instance.new("UICorner", title)
titleCorner.CornerRadius = UDim.new(0, 8)

local closeButton = Instance.new("TextButton", frame)
closeButton.Size = UDim2.new(0, 24, 0, 24)
closeButton.Position = UDim2.new(1, -28, 0, 10)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.BackgroundColor3 = Color3.new(1, 0, 0)
closeButton.BorderSizePixel = 0
closeButton.Font = Enum.Font.GothamBlack
closeButton.TextSize = 18
closeButton.TextXAlignment = Enum.TextXAlignment.Center
closeButton.TextYAlignment = Enum.TextYAlignment.Center

local closeButtonCorner = Instance.new("UICorner", closeButton)
closeButtonCorner.CornerRadius = UDim.new(0, 8)

closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

local teleportsSection = Instance.new("Frame", frame)
teleportsSection.Size = UDim2.new(1, -10, 0, 35)
teleportsSection.Position = UDim2.new(0, 5, 0, 48)
teleportsSection.BackgroundColor3 = Color3.new(0.25, 0.25, 0.25)
teleportsSection.ClipsDescendants = true

local sectionCorner = Instance.new("UICorner", teleportsSection)
sectionCorner.CornerRadius = UDim.new(0, 8)

local headerContainer = Instance.new("Frame", teleportsSection)
headerContainer.Size = UDim2.new(1, 0, 0, 35)
headerContainer.Position = UDim2.new(0, 0, 0, 0)
headerContainer.BackgroundTransparency = 1

local headerButton = Instance.new("TextButton", headerContainer)
headerButton.Size = UDim2.new(1, 0, 1, 0)
headerButton.Text = ""
headerButton.BackgroundTransparency = 1
headerButton.ZIndex = 2

local headerText = Instance.new("TextLabel", headerButton)
headerText.Size = UDim2.new(0.7, 0, 1, 0)
headerText.Position = UDim2.new(0, 10, 0, 0)
headerText.Text = "Teleports"
headerText.TextColor3 = Color3.new(1, 1, 1)
headerText.BackgroundTransparency = 1
headerText.Font = Enum.Font.GothamBlack
headerText.TextSize = 16
headerText.TextXAlignment = Enum.TextXAlignment.Left

local arrow = Instance.new("TextLabel", headerButton)
arrow.Size = UDim2.new(0, 20, 1, 0)
arrow.Position = UDim2.new(1, -25, 0, 0)
arrow.Text = "▶"
arrow.TextColor3 = Color3.new(1, 1, 1)
arrow.BackgroundTransparency = 1
arrow.Font = Enum.Font.GothamBlack
arrow.TextSize = 18
arrow.TextXAlignment = Enum.TextXAlignment.Right

local buttonsContainer = Instance.new("Frame", teleportsSection)
buttonsContainer.Size = UDim2.new(1, -10, 0, 80)
buttonsContainer.Position = UDim2.new(0, 5, 0, 35)
buttonsContainer.BackgroundTransparency = 1
buttonsContainer.Visible = false

local button1 = Instance.new("TextButton", buttonsContainer)
button1.Size = UDim2.new(1, 0, 0, 35)
button1.Position = UDim2.new(0, 0, 0, 5)
button1.Text = "Alchemist ingredients"
button1.TextColor3 = Color3.new(1, 1, 1)
button1.BackgroundColor3 = Color3.new(0, 0.5, 0)
button1.BorderSizePixel = 0
button1.Font = Enum.Font.GothamBlack
button1.TextSize = 13

local button1Corner = Instance.new("UICorner", button1)
button1Corner.CornerRadius = UDim.new(0, 6)

local button2 = Instance.new("TextButton", buttonsContainer)
button2.Size = UDim2.new(1, 0, 0, 35)
button2.Position = UDim2.new(0, 0, 0, 45)
button2.Text = "Swordfighter swords"
button2.TextColor3 = Color3.new(1, 1, 1)
button2.BackgroundColor3 = Color3.new(0, 0.5, 0)
button2.BorderSizePixel = 0
button2.Font = Enum.Font.GothamBlack
button2.TextSize = 13

local button2Corner = Instance.new("UICorner", button2)
button2Corner.CornerRadius = UDim.new(0, 6)

local tweenService = game:GetService("TweenService")
local isMenuOpen = false

local function toggleMenu()
    isMenuOpen = not isMenuOpen
    arrow.Text = isMenuOpen and "▼" or "▶"
    
    if isMenuOpen then
        buttonsContainer.Visible = true
        local openTween = tweenService:Create(
            teleportsSection,
            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Size = UDim2.new(1, -10, 0, 120)}
        )
        openTween:Play()
        
        local frameTween = tweenService:Create(
            frame,
            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Size = UDim2.new(0, 200, 0, 180)}
        )
        frameTween:Play()
    else
        local closeTween = tweenService:Create(
            teleportsSection,
            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Size = UDim2.new(1, -10, 0, 35)}
        )
        closeTween:Play()
        
        local frameTween = tweenService:Create(
            frame,
            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {Size = UDim2.new(0, 200, 0, 90)}
        )
        frameTween:Play()
        
        task.delay(0.2, function()
            buttonsContainer.Visible = false
        end)
    end
end

headerButton.MouseButton1Click:Connect(toggleMenu)

local function teleportToAlchemistItems()
    local rootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end
    local originalPosition = rootPart.CFrame
    for _, item in pairs(workspace.Alchemist_Ingredients_:GetChildren()) do
        local targetPart = item:IsA("Model") and (item.PrimaryPart or item:FindFirstChild("HumanoidRootPart")) or item
        if targetPart and targetPart:IsA("BasePart") then
            rootPart.CFrame = targetPart.CFrame
            task.wait(0.3 / 1000)
        end
    end
    rootPart.CFrame = originalPosition
end

local function teleportToSwords()
    local rootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end
    local originalPosition = rootPart.CFrame
    for _, sword in pairs(workspace.SwordFighter_Swords_:GetChildren()) do
        local targetPart = sword:IsA("Model") and (sword.PrimaryPart or sword:FindFirstChild("HumanoidRootPart")) or sword
        if targetPart and targetPart:IsA("BasePart") then
            rootPart.CFrame = targetPart.CFrame
            task.wait(0.1)
        end
    end
    rootPart.CFrame = originalPosition
end

button1.MouseButton1Click:Connect(teleportToAlchemistItems)
button2.MouseButton1Click:Connect(teleportToSwords)

local dragInput, dragStart, startPos
frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragStart = nil
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        if dragStart then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end
end)
